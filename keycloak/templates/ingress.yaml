# vim: set syntax=helm:

{{- $fullname := (include "keycloak.fullname" .) -}}
{{- $serviceName := (include "keycloak.serviceName" .) -}}

# manifests 

{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullname }}
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    {{- with .Values.ingress.extraAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ .Values.keycloak.hostname | quote }}
    secretName: {{ .Values.ingress.tls.secretName }}
  rules:
  - host: {{ .Values.keycloak.hostname | quote }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ $serviceName }}
            port:
              number: 8080

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-admin-restricted" $fullname }}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ .Values.ingress.adminRestricted.whitelist | default "127.0.0.1/8" }}
    {{- with .Values.ingress.extraAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ .Values.keycloak.hostname | quote }} 
    secretName: {{ .Values.ingress.tls.secretName }}
  rules:
  - host: {{ .Values.keycloak.hostname | quote }}
    http:
      paths:
      - path: /admin
        pathType: Prefix
        backend:
          service: 
            name: {{ $serviceName }}
            port:
              number: 8080
{{- end }}{{/* if .Values.ingress.enabled */}}

{{- if .Values.ingressAdmin.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ printf "%s-admin" $fullname }}
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    {{- with .Values.ingressAdmin.clientAuth }}
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: {{ .verifyDepth | int | quote }}
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "on"
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ printf "%s/%s" ($.Release.Namespace) (.certificateAuthority.secretName) }}
    {{- end }}{{/* .Values.ingressAdmin.clientAuth */}} 
    {{- with .Values.ingressAdmin.extraAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - {{ .Values.keycloak.hostnameAdmin | quote }} 
    secretName: {{ .Values.ingressAdmin.tls.secretName }} 
  rules:
  - host: {{ .Values.keycloak.hostnameAdmin | quote }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ $serviceName }} 
            port:
              number: 8080
{{- end }}{{/* if .Values.ingressAdmin.enabled */}}
