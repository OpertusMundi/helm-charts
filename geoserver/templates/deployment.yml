# vim: set filetype=helm:

{{- $fullname := (include "geoserver.fullname" .) -}}
{{- $serviceDomain := (include "geoserver.serviceDomain" .) -}}
{{- $geoserverHost := printf "%s-0.%s" $fullname $serviceDomain }}

# manifests

---

{{- if .Values.curl.create }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}-cli
  labels:
    {{- include "geoserver.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "geoserver.selectorLabelsForCommandLine" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "geoserver.selectorLabelsForCommandLine" . | nindent 8 }}
    spec:  
      securityContext:
        fsGroup: {{ .Values.curl.gid }}
      volumes:
      - name: netrc
        secret:
          secretName: {{ $fullname }}-admin-netrc
          defaultMode: 0640
      - name: home
        emptyDir: {}
      initContainers:
      - name: prepare-home
        image: {{ .Values.curl.image }}
        command:
        - sh
        args:
        - -c
        - |-
          cp -v /netrc ${HOME}/.netrc
          chmod -v 0600 ${HOME}/.netrc
        volumeMounts:
        - name: netrc
          mountPath: /netrc
          subPath: netrc
          readOnly: true
        - name: home
          mountPath: {{ .Values.curl.userDir }}
      containers:
      - name: curl
        image: {{ .Values.curl.image }}
        env:
        - name: GEOSERVER_URL
          value: {{ printf "http://%s:8080/geoserver" $geoserverHost }}
        volumeMounts:
        - name: home
          mountPath: {{ .Values.curl.userDir }}
        command:
        - sleep
        - 30d
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 250m
            memory: 64Mi
      restartPolicy: Always
{{- end }}{{/* if .Values.curl.create */}}
